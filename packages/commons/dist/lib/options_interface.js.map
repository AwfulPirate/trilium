{"version":3,"sources":["../../src/lib/options_interface.ts"],"sourcesContent":["import type { KeyboardActionNames } from \"./keyboard_actions_interface.js\";\n\n/**\n * A dictionary where the keys are the option keys (e.g. `theme`) and their corresponding values.\n */\nexport type OptionMap = Record<OptionNames, string>;\n\n/**\n * For each keyboard action, there is a corresponding option which identifies the key combination defined by the user.\n */\ntype KeyboardShortcutsOptions<T extends KeyboardActionNames> = {\n    [key in T as `keyboardShortcuts${Capitalize<key>}`]: string;\n};\n\nexport type FontFamily = \"theme\" | \"serif\" | \"sans-serif\" | \"monospace\" | string;\n\nexport interface OptionDefinitions extends KeyboardShortcutsOptions<KeyboardActionNames> {\n    openNoteContexts: string;\n    lastDailyBackupDate: string;\n    lastWeeklyBackupDate: string;\n    lastMonthlyBackupDate: string;\n    dbVersion: string;\n    theme: string;\n    syncServerHost: string;\n    syncServerTimeout: string;\n    syncProxy: string;\n    mainFontFamily: FontFamily;\n    treeFontFamily: FontFamily;\n    detailFontFamily: FontFamily;\n    monospaceFontFamily: FontFamily;\n    spellCheckLanguageCode: string;\n    codeNotesMimeTypes: string;\n    headingStyle: string;\n    highlightsList: string;\n    customSearchEngineName: string;\n    customSearchEngineUrl: string;\n    locale: string;\n    formattingLocale: string;\n    codeBlockTheme: string;\n    textNoteEditorType: string;\n    layoutOrientation: string;\n    allowedHtmlTags: string;\n    documentId: string;\n    documentSecret: string;\n    passwordVerificationHash: string;\n    passwordVerificationSalt: string;\n    passwordDerivedKeySalt: string;\n    encryptedDataKey: string;\n    hoistedNoteId: string;\n\n    // Multi-Factor Authentication\n    mfaEnabled: boolean;\n    mfaMethod: string;\n    totpEncryptionSalt: string;\n    totpEncryptedSecret: string;\n    totpVerificationHash: string;\n    encryptedRecoveryCodes: boolean;\n    userSubjectIdentifierSaved: boolean;\n    recoveryCodeInitialVector: string;\n    recoveryCodeSecurityKey: string;\n    recoveryCodesEncrypted: string;\n\n    lastSyncedPull: number;\n    lastSyncedPush: number;\n    revisionSnapshotTimeInterval: number;\n    revisionSnapshotTimeIntervalTimeScale: number;\n    revisionSnapshotNumberLimit: number;\n    protectedSessionTimeout: number;\n    protectedSessionTimeoutTimeScale: number;\n    zoomFactor: number;\n    mainFontSize: number;\n    treeFontSize: number;\n    detailFontSize: number;\n    monospaceFontSize: number;\n    imageMaxWidthHeight: number;\n    imageJpegQuality: number;\n    leftPaneWidth: number;\n    rightPaneWidth: number;\n    eraseEntitiesAfterTimeInSeconds: number;\n    eraseEntitiesAfterTimeScale: number;\n    autoReadonlySizeText: number;\n    autoReadonlySizeCode: number;\n    maxContentWidth: number;\n    minTocHeadings: number;\n    eraseUnusedAttachmentsAfterSeconds: number;\n    eraseUnusedAttachmentsAfterTimeScale: number;\n    firstDayOfWeek: number;\n    firstWeekOfYear: number;\n    minDaysInFirstWeek: number;\n    languages: string;\n\n    // Appearance\n    splitEditorOrientation: \"horziontal\" | \"vertical\";\n\n    initialized: boolean;\n    isPasswordSet: boolean;\n    overrideThemeFonts: boolean;\n    spellCheckEnabled: boolean;\n    autoFixConsistencyIssues: boolean;\n    vimKeymapEnabled: boolean;\n    codeLineWrapEnabled: boolean;\n    leftPaneVisible: boolean;\n    rightPaneVisible: boolean;\n    nativeTitleBarVisible: boolean;\n    hideArchivedNotes_main: boolean;\n    debugModeEnabled: boolean;\n    autoCollapseNoteTree: boolean;\n    dailyBackupEnabled: boolean;\n    weeklyBackupEnabled: boolean;\n    monthlyBackupEnabled: boolean;\n    compressImages: boolean;\n    downloadImagesAutomatically: boolean;\n    checkForUpdates: boolean;\n    disableTray: boolean;\n    promotedAttributesOpenInRibbon: boolean;\n    editedNotesOpenInRibbon: boolean;\n    codeBlockWordWrap: boolean;\n    textNoteEditorMultilineToolbar: boolean;\n    backgroundEffects: boolean;\n\n    // Share settings\n    redirectBareDomain: boolean;\n    showLoginInShareTheme: boolean;\n\n    // AI/LLM integration options\n    aiEnabled: boolean;\n    aiProvider: string;\n    aiSystemPrompt: string;\n    aiTemperature: string;\n    openaiApiKey: string;\n    openaiDefaultModel: string;\n    openaiEmbeddingModel: string;\n    openaiBaseUrl: string;\n    anthropicApiKey: string;\n    anthropicDefaultModel: string;\n    voyageEmbeddingModel: string;\n    voyageApiKey: string;\n    anthropicBaseUrl: string;\n    ollamaEnabled: boolean;\n    ollamaBaseUrl: string;\n    ollamaDefaultModel: string;\n    ollamaEmbeddingModel: string;\n    codeOpenAiModel: string;\n    aiProviderPrecedence: string;\n\n    // Embedding-related options\n    embeddingAutoUpdateEnabled: boolean;\n    embeddingUpdateInterval: number;\n    embeddingBatchSize: number;\n    embeddingDefaultDimension: number;\n    embeddingsDefaultProvider: string;\n    embeddingProviderPrecedence: string;\n    enableAutomaticIndexing: boolean;\n    embeddingGenerationLocation: string;\n    embeddingDimensionStrategy: string;\n    embeddingSimilarityThreshold: number;\n    maxNotesPerLlmQuery: number;\n}\n\nexport type OptionNames = keyof OptionDefinitions;\n\nexport type FilterOptionsByType<U> = {\n    [K in keyof OptionDefinitions]: OptionDefinitions[K] extends U ? K : never;\n}[keyof OptionDefinitions];\n"],"names":[],"rangeMappings":"","mappings":"AAiKA,WAE2B"}