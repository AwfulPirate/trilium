{"version":3,"sources":["../../src/lib/keyboard_actions_interface.ts"],"sourcesContent":["const enum KeyboardActionNamesEnum {\n    backInNoteHistory,\n    forwardInNoteHistory,\n    jumpToNote,\n    scrollToActiveNote,\n    quickSearch,\n    searchInSubtree,\n    expandSubtree,\n    collapseTree,\n    collapseSubtree,\n    sortChildNotes,\n    createNoteAfter,\n    createNoteInto,\n    createNoteIntoInbox,\n    deleteNotes,\n    moveNoteUp,\n    moveNoteDown,\n    moveNoteUpInHierarchy,\n    moveNoteDownInHierarchy,\n    editNoteTitle,\n    editBranchPrefix,\n    cloneNotesTo,\n    moveNotesTo,\n    copyNotesToClipboard,\n    pasteNotesFromClipboard,\n    cutNotesToClipboard,\n    selectAllNotesInParent,\n    addNoteAboveToSelection,\n    addNoteBelowToSelection,\n    duplicateSubtree,\n    openNewTab,\n    closeActiveTab,\n    reopenLastTab,\n    activateNextTab,\n    activatePreviousTab,\n    openNewWindow,\n    toggleTray,\n    toggleZenMode,\n    firstTab,\n    secondTab,\n    thirdTab,\n    fourthTab,\n    fifthTab,\n    sixthTab,\n    seventhTab,\n    eigthTab,\n    ninthTab,\n    lastTab,\n    showNoteSource,\n    showOptions,\n    showRevisions,\n    showRecentChanges,\n    showSQLConsole,\n    showBackendLog,\n    showCheatsheet,\n    showHelp,\n    addLinkToText,\n    followLinkUnderCursor,\n    insertDateTimeToText,\n    pasteMarkdownIntoText,\n    cutIntoNote,\n    addIncludeNoteToText,\n    editReadOnlyNote,\n    addNewLabel,\n    addNewRelation,\n    toggleRibbonTabClassicEditor,\n    toggleRibbonTabBasicProperties,\n    toggleRibbonTabBookProperties,\n    toggleRibbonTabFileProperties,\n    toggleRibbonTabImageProperties,\n    toggleRibbonTabOwnedAttributes,\n    toggleRibbonTabInheritedAttributes,\n    toggleRibbonTabPromotedAttributes,\n    toggleRibbonTabNoteMap,\n    toggleRibbonTabNoteInfo,\n    toggleRibbonTabNotePaths,\n    toggleRibbonTabSimilarNotes,\n    toggleRightPane,\n    printActiveNote,\n    exportAsPdf,\n    openNoteExternally,\n    renderActiveNote,\n    runActiveNote,\n    toggleNoteHoisting,\n    unhoist,\n    reloadFrontendApp,\n    openDevTools,\n    findInText,\n    toggleLeftPane,\n    toggleFullscreen,\n    zoomOut,\n    zoomIn,\n    zoomReset,\n    copyWithoutFormatting,\n    forceSaveRevision\n}\n\nexport type KeyboardActionNames = keyof typeof KeyboardActionNamesEnum;\n\nexport interface KeyboardShortcut {\n    separator?: string;\n    actionName?: KeyboardActionNames;\n    description?: string;\n    defaultShortcuts?: string[];\n    effectiveShortcuts?: string[];\n    /**\n     * Scope here means on which element the keyboard shortcuts are attached - this means that for the shortcut to work,\n     * the focus has to be inside the element.\n     *\n     * So e.g. shortcuts with \"note-tree\" scope work only when the focus is in note tree.\n     * This allows to have the same shortcut have different actions attached based on the context\n     * e.g. CTRL-C in note tree does something a bit different from CTRL-C in the text editor.\n     */\n    scope?: \"window\" | \"note-tree\" | \"text-detail\" | \"code-detail\";\n}\n\nexport interface KeyboardShortcutWithRequiredActionName extends KeyboardShortcut {\n    actionName: KeyboardActionNames;\n}\n"],"names":[],"rangeMappings":";","mappings":";AAoHA,WAEC"}