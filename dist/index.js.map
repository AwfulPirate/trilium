{"version":3,"file":"index.js","sources":["../src/utils.js","../src/commands/mermaidPreviewCommand.js","../src/commands/mermaidSourceViewCommand.js","../src/commands/mermaidSplitViewCommand.js","../src/commands/insertMermaidCommand.js","../src/mermaidediting.js","../src/mermaidtoolbar.js","../src/mermaidui.js","../src/mermaid.js","../src/index.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module mermaid/utils\n */\n\n/**\n * Helper function for setting the `isOn` state of buttons.\n *\n * @private\n * @param {module:core/editor/editor~Editor} editor\n * @param {String} commandName Short name of the command.\n * @returns {Boolean}\n */\nexport function checkIsOn( editor, commandName ) {\n\tconst selection = editor.model.document.selection;\n\tconst mermaidItem = selection.getSelectedElement() || selection.getLastPosition().parent;\n\n\tif ( mermaidItem && mermaidItem.is( 'element', 'mermaid' ) && mermaidItem.getAttribute( 'displayMode' ) === commandName ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @module mermaid/mermaidpreviewcommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\n\nimport { checkIsOn } from '../utils.js';\n\n/**\n * The mermaid preview command.\n *\n * Allows to switch to a preview mode.\n *\n * @extends module:core/command~Command\n */\nexport default class MermaidPreviewCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst documentSelection = editor.model.document.selection;\n\t\tconst selectedElement = documentSelection.getSelectedElement();\n\t\tconst isSelectedElementMermaid = selectedElement && selectedElement.name === 'mermaid';\n\n\t\tif ( isSelectedElementMermaid || documentSelection.getLastPosition().findAncestor( 'mermaid' ) ) {\n\t\t\tthis.isEnabled = !!selectedElement;\n\t\t} else {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\n\t\tthis.value = checkIsOn( editor, 'preview' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst documentSelection = this.editor.model.document.selection;\n\t\tconst mermaidItem = documentSelection.getSelectedElement() || documentSelection.getLastPosition().parent;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( mermaidItem.getAttribute( 'displayMode' ) !== 'preview' ) {\n\t\t\t\twriter.setAttribute( 'displayMode', 'preview', mermaidItem );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @module mermaid/mermaidsourceviewcommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\n\nimport { checkIsOn } from '../utils.js';\n\n/**\n * The mermaid source view command.\n *\n * Allows to switch to a source view mode.\n *\n * @extends module:core/command~Command\n */\nexport default class MermaidSourceViewCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst documentSelection = editor.model.document.selection;\n\t\tconst selectedElement = documentSelection.getSelectedElement();\n\t\tconst isSelectedElementMermaid = selectedElement && selectedElement.name === 'mermaid';\n\n\t\tif ( isSelectedElementMermaid || documentSelection.getLastPosition().findAncestor( 'mermaid' ) ) {\n\t\t\tthis.isEnabled = !!selectedElement;\n\t\t} else {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\n\t\tthis.value = checkIsOn( editor, 'source' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst documentSelection = this.editor.model.document.selection;\n\t\tconst mermaidItem = documentSelection.getSelectedElement() || documentSelection.getLastPosition().parent;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( mermaidItem.getAttribute( 'displayMode' ) !== 'source' ) {\n\t\t\t\twriter.setAttribute( 'displayMode', 'source', mermaidItem );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @module mermaid/mermaidsplitviewcommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\n\nimport { checkIsOn } from '../utils.js';\n\n/**\n * The mermaid split view command.\n *\n * Allows to switch to a split view mode.\n *\n * @extends module:core/command~Command\n */\nexport default class MermaidSplitViewCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst documentSelection = editor.model.document.selection;\n\t\tconst selectedElement = documentSelection.getSelectedElement();\n\t\tconst isSelectedElementMermaid = selectedElement && selectedElement.name === 'mermaid';\n\n\t\tif ( isSelectedElementMermaid || documentSelection.getLastPosition().findAncestor( 'mermaid' ) ) {\n\t\t\tthis.isEnabled = !!selectedElement;\n\t\t} else {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\n\t\tthis.value = checkIsOn( editor, 'split' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst documentSelection = this.editor.model.document.selection;\n\t\tconst mermaidItem = documentSelection.getSelectedElement() || documentSelection.getLastPosition().parent;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( mermaidItem.getAttribute( 'displayMode' ) !== 'split' ) {\n\t\t\t\twriter.setAttribute( 'displayMode', 'split', mermaidItem );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @module mermaid/insertmermaidcommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\n\nconst MOCK_MERMAID_MARKUP = `flowchart TB\nA --> B\nB --> C`;\n\n/**\n * The insert mermaid command.\n *\n * Allows to insert mermaid.\n *\n * @extends module:core/command~Command\n */\nexport default class InsertMermaidCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst documentSelection = this.editor.model.document.selection;\n\t\tconst selectedElement = documentSelection.getSelectedElement();\n\n\t\tif ( selectedElement && selectedElement.name === 'mermaid' ) {\n\t\t\tthis.isEnabled = false;\n\t\t} else {\n\t\t\tthis.isEnabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tlet mermaidItem;\n\n\t\tmodel.change( writer => {\n\t\t\tmermaidItem = writer.createElement( 'mermaid', {\n\t\t\t\tdisplayMode: 'split',\n\t\t\t\tsource: MOCK_MERMAID_MARKUP\n\t\t\t} );\n\n\t\t\tmodel.insertContent( mermaidItem );\n\t\t} );\n\n\t\treturn mermaidItem;\n\t}\n}\n","/**\n * @module mermaid/mermaidediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { toWidget } from 'ckeditor5/src/widget.js';\n\nimport mermaid from 'mermaid/dist/mermaid.js';\n\nimport { debounce } from 'lodash-es';\n\nimport MermaidPreviewCommand from './commands/mermaidPreviewCommand.js';\nimport MermaidSourceViewCommand from './commands/mermaidSourceViewCommand.js';\nimport MermaidSplitViewCommand from './commands/mermaidSplitViewCommand.js';\nimport InsertMermaidCommand from './commands/insertMermaidCommand.js';\n\n// Time in milliseconds.\nconst DEBOUNCE_TIME = 300;\n\n/* global window */\n\nexport default class MermaidEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MermaidEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis._registerCommands();\n\t\tthis._defineConverters();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tthis.editor.model.schema.register( 'mermaid', {\n\t\t\tallowAttributes: [ 'displayMode', 'source' ],\n\t\t\tallowWhere: '$block',\n\t\t\tisObject: true\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t*/\n\t_registerCommands() {\n\t\tconst editor = this.editor;\n\n\t\teditor.commands.add( 'mermaidPreviewCommand', new MermaidPreviewCommand( editor ) );\n\t\teditor.commands.add( 'mermaidSplitViewCommand', new MermaidSplitViewCommand( editor ) );\n\t\teditor.commands.add( 'mermaidSourceViewCommand', new MermaidSourceViewCommand( editor ) );\n\t\teditor.commands.add( 'insertMermaidCommand', new InsertMermaidCommand( editor ) );\n\t}\n\n\t/**\n\t * Adds converters.\n\t *\n\t * @private\n\t */\n\t_defineConverters() {\n\t\tconst editor = this.editor;\n\n\t\teditor.data.downcastDispatcher.on( 'insert:mermaid', this._mermaidDataDowncast.bind( this ) );\n\t\teditor.editing.downcastDispatcher.on( 'insert:mermaid', this._mermaidDowncast.bind( this ) );\n\t\teditor.editing.downcastDispatcher.on( 'attribute:source:mermaid', this._sourceAttributeDowncast.bind( this ) );\n\n\t\teditor.data.upcastDispatcher.on( 'element:code', this._mermaidUpcast.bind( this ), { priority: 'high' } );\n\n\t\teditor.conversion.for( 'editingDowncast' ).attributeToAttribute( {\n\t\t\tmodel: {\n\t\t\t\tname: 'mermaid',\n\t\t\t\tkey: 'displayMode'\n\t\t\t},\n\t\t\tview: modelAttributeValue => ( {\n\t\t\t\tkey: 'class',\n\t\t\t\tvalue: 'ck-mermaid__' + modelAttributeValue + '-mode'\n\t\t\t} )\n\t\t} );\n\t}\n\n\t/**\n\t *\n\t * @private\n\t * @param {*} evt\n\t * @param {*} data\n\t * @param {*} conversionApi\n\t */\n\t_mermaidDataDowncast( evt, data, conversionApi ) {\n\t\tconst model = this.editor.model;\n\t\tconst { writer, mapper } = conversionApi;\n\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetViewPosition = mapper.toViewPosition( model.createPositionBefore( data.item ) );\n\t\t// For downcast we're using only language-mermaid class. We don't set class to `mermaid language-mermaid` as\n\t\t// multiple markdown converters that we have seen are using only `language-mermaid` class and not `mermaid` alone.\n\t\tconst code = writer.createContainerElement( 'code', {\n\t\t\tclass: 'language-mermaid'\n\t\t} );\n\t\tconst pre = writer.createContainerElement( 'pre', {\n\t\t\tspellcheck: 'false'\n\t\t} );\n\t\tconst sourceTextNode = writer.createText( data.item.getAttribute( 'source' ) );\n\n\t\twriter.insert( model.createPositionAt( code, 'end' ), sourceTextNode );\n\t\twriter.insert( model.createPositionAt( pre, 'end' ), code );\n\t\twriter.insert( targetViewPosition, pre );\n\t\tmapper.bindElements( data.item, code );\n\t}\n\n\t/**\n\t *\n\t * @private\n\t * @param {*} evt\n\t * @param {*} data\n\t * @param {*} conversionApi\n\t */\n\t_mermaidDowncast( evt, data, conversionApi ) {\n\t\tconst { writer, mapper, consumable } = conversionApi;\n\t\tconst { editor } = this;\n\t\tconst { model, t } = editor;\n\t\tconst that = this;\n\n\t\tif ( !consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetViewPosition = mapper.toViewPosition( model.createPositionBefore( data.item ) );\n\n\t\tconst wrapperAttributes = {\n\t\t\tclass: [ 'ck-mermaid__wrapper' ]\n\t\t};\n\t\tconst textareaAttributes = {\n\t\t\tclass: [ 'ck-mermaid__editing-view' ],\n\t\t\tplaceholder: t( 'Insert mermaid source code' ),\n\t\t\t'data-cke-ignore-events': true\n\t\t};\n\n\t\tconst wrapper = writer.createContainerElement( 'div', wrapperAttributes );\n\t\tconst editingContainer = writer.createUIElement( 'textarea', textareaAttributes, createEditingTextarea );\n\t\tconst previewContainer = writer.createUIElement( 'div', { class: [ 'ck-mermaid__preview' ] }, createMermaidPreview );\n\n\t\twriter.insert( writer.createPositionAt( wrapper, 'start' ), previewContainer );\n\t\twriter.insert( writer.createPositionAt( wrapper, 'start' ), editingContainer );\n\n\t\twriter.insert( targetViewPosition, wrapper );\n\n\t\tmapper.bindElements( data.item, wrapper );\n\n\t\treturn toWidget( wrapper, writer, {\n\t\t\twidgetLabel: t( 'Mermaid widget' ),\n\t\t\thasSelectionHandle: true\n\t\t} );\n\n\t\tfunction createEditingTextarea( domDocument ) {\n\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\tdomElement.value = data.item.getAttribute( 'source' );\n\n\t\t\tconst debouncedListener = debounce( event => {\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\twriter.setAttribute( 'source', event.target.value, data.item );\n\t\t\t\t} );\n\t\t\t}, DEBOUNCE_TIME );\n\n\t\t\tdomElement.addEventListener( 'input', debouncedListener );\n\n\t\t\t/* Workaround for internal #1544 */\n\t\t\tdomElement.addEventListener( 'focus', () => {\n\t\t\t\tconst model = editor.model;\n\t\t\t\tconst selectedElement = model.document.selection.getSelectedElement();\n\n\t\t\t\t// Move the selection onto the mermaid widget if it's currently not selected.\n\t\t\t\tif ( selectedElement !== data.item ) {\n\t\t\t\t\tmodel.change( writer => writer.setSelection( data.item, 'on' ) );\n\t\t\t\t}\n\t\t\t}, true );\n\n\t\t\treturn domElement;\n\t\t}\n\n\t\tfunction createMermaidPreview( domDocument ) {\n\t\t\t// Taking the text from the wrapper container element for now\n\t\t\tconst mermaidSource = data.item.getAttribute( 'source' );\n\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\tdomElement.innerHTML = mermaidSource;\n\n\t\t\twindow.setTimeout( () => {\n\t\t\t\t// @todo: by the looks of it the domElement needs to be hooked to tree in order to allow for rendering.\n\t\t\t\tthat._renderMermaid( domElement );\n\t\t\t}, 100 );\n\n\t\t\treturn domElement;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {*} evt\n\t * @param {*} data\n\t * @param {*} conversionApi\n\t * @returns\n\t */\n\t_sourceAttributeDowncast( evt, data, conversionApi ) {\n\t\t// @todo: test whether the attribute was consumed.\n\t\tconst newSource = data.attributeNewValue;\n\t\tconst domConverter = this.editor.editing.view.domConverter;\n\n\t\tif ( newSource ) {\n\t\t\tconst mermaidView = conversionApi.mapper.toViewElement( data.item );\n\n\t\t\tfor ( const child of mermaidView.getChildren() ) {\n\t\t\t\tif ( child.name === 'textarea' && child.hasClass( 'ck-mermaid__editing-view' ) ) {\n\t\t\t\t\tconst domEditingTextarea = domConverter.viewToDom( child, window.document );\n\n\t\t\t\t\tif ( domEditingTextarea.value != newSource ) {\n\t\t\t\t\t\tdomEditingTextarea.value = newSource;\n\t\t\t\t\t}\n\t\t\t\t} else if ( child.name === 'div' && child.hasClass( 'ck-mermaid__preview' ) ) {\n\t\t\t\t\t// @todo: we could optimize this and not refresh mermaid if widget is in source mode.\n\t\t\t\t\tconst domPreviewWrapper = domConverter.viewToDom( child, window.document );\n\n\t\t\t\t\tif ( domPreviewWrapper ) {\n\t\t\t\t\t\tdomPreviewWrapper.innerHTML = newSource;\n\t\t\t\t\t\tdomPreviewWrapper.removeAttribute( 'data-processed' );\n\n\t\t\t\t\t\tthis._renderMermaid( domPreviewWrapper );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @private\n\t * @param {*} evt\n\t * @param {*} data\n\t * @param {*} conversionApi\n\t */\n\t_mermaidUpcast( evt, data, conversionApi ) {\n\t\tconst viewCodeElement = data.viewItem;\n\t\tconst hasPreElementParent = !viewCodeElement.parent || !viewCodeElement.parent.is( 'element', 'pre' );\n\t\tconst hasCodeAncestors = data.modelCursor.findAncestor( 'code' );\n\t\tconst { consumable, writer } = conversionApi;\n\n\t\tif ( !viewCodeElement.hasClass( 'language-mermaid' ) || hasPreElementParent || hasCodeAncestors ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.test( viewCodeElement, { name: true } ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst mermaidSource = Array.from( viewCodeElement.getChildren() )\n\t\t\t.filter( item => item.is( '$text' ) )\n\t\t\t.map( item => item.data )\n\t\t\t.join( '' );\n\n\t\tconst mermaidElement = writer.createElement( 'mermaid', {\n\t\t\tsource: mermaidSource,\n\t\t\tdisplayMode: 'split'\n\t\t} );\n\n\t\t// Let's try to insert mermaid element.\n\t\tif ( !conversionApi.safeInsert( mermaidElement, data.modelCursor ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsumable.consume( viewCodeElement, { name: true } );\n\n\t\tconversionApi.updateConversionResult( mermaidElement, data );\n\t}\n\n\t/**\n\t * Renders Mermaid in a given `domElement`. Expect this domElement to have mermaid\n\t * source set as text content.\n\t *\n\t * @param {HTMLElement} domElement\n\t */\n\t_renderMermaid( domElement ) {\n\t\tmermaid.init( undefined, domElement );\n\t}\n}\n","/**\n * @module mermaid/mermaidtoolbar\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { WidgetToolbarRepository } from 'ckeditor5/src/widget.js';\n\nexport default class MermaidToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ WidgetToolbarRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MermaidToolbar';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst widgetToolbarRepository = editor.plugins.get( WidgetToolbarRepository );\n\t\tconst mermaidToolbarItems = [ 'mermaidSourceView', 'mermaidSplitView', 'mermaidPreview', '|', 'mermaidInfo' ];\n\n\t\tif ( mermaidToolbarItems ) {\n\t\t\twidgetToolbarRepository.register( 'mermaidToolbar', {\n\t\t\t\tariaLabel: t( 'Mermaid toolbar' ),\n\t\t\t\titems: mermaidToolbarItems,\n\t\t\t\tgetRelatedElement: selection => getSelectedElement( selection )\n\t\t\t} );\n\t\t}\n\t}\n}\n\nfunction getSelectedElement( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && viewElement.hasClass( 'ck-mermaid__wrapper' ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n","/**\n * @module mermaid/mermaidui\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { ButtonView } from 'ckeditor5/src/ui.js';\n\nimport insertMermaidIcon from '../theme/icons/insert.svg';\nimport previewModeIcon from '../theme/icons/preview-mode.svg';\nimport splitModeIcon from '../theme/icons/split-mode.svg';\nimport sourceModeIcon from '../theme/icons/source-mode.svg';\nimport infoIcon from '../theme/icons/info.svg';\n\n/* global window, document */\n\nexport default class MermaidUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MermaidUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis._addButtons();\n\t}\n\n\t/**\n\t * Adds all mermaid-related buttons.\n\t *\n\t * @private\n\t */\n\t_addButtons() {\n\t\tconst editor = this.editor;\n\n\t\tthis._addInsertMermaidButton();\n\t\tthis._addMermaidInfoButton();\n\t\tthis._createToolbarButton( editor, 'mermaidPreview', 'Preview', previewModeIcon );\n\t\tthis._createToolbarButton( editor, 'mermaidSourceView', 'Source view', sourceModeIcon );\n\t\tthis._createToolbarButton( editor, 'mermaidSplitView', 'Split view', splitModeIcon );\n\t}\n\n\t/**\n\t * Adds the button for inserting mermaid.\n\t *\n\t * @private\n\t */\n\t_addInsertMermaidButton() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst view = editor.editing.view;\n\n\t\teditor.ui.componentFactory.add( 'mermaid', locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\t\t\tconst command = editor.commands.get( 'insertMermaidCommand' );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( 'Insert Mermaid diagram' ),\n\t\t\t\ticon: insertMermaidIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute the command when the button is clicked.\n\t\t\tcommand.listenTo( buttonView, 'execute', () => {\n\t\t\t\tconst mermaidItem = editor.execute( 'insertMermaidCommand' );\n\t\t\t\tconst mermaidItemViewElement = editor.editing.mapper.toViewElement( mermaidItem );\n\n\t\t\t\tview.scrollToTheSelection();\n\t\t\t\tview.focus();\n\n\t\t\t\tif ( mermaidItemViewElement ) {\n\t\t\t\t\tconst mermaidItemDomElement = view.domConverter.viewToDom( mermaidItemViewElement, document );\n\n\t\t\t\t\tif ( mermaidItemDomElement ) {\n\t\t\t\t\t\tmermaidItemDomElement.querySelector( '.ck-mermaid__editing-view' ).focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the button linking to the mermaid guide.\n\t *\n\t * @private\n\t */\n\t_addMermaidInfoButton() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'mermaidInfo', locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\t\t\tconst link = 'https://ckeditor.com/blog/basic-overview-of-creating-flowcharts-using-mermaid/';\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( 'Read more about Mermaid diagram syntax' ),\n\t\t\t\ticon: infoIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\twindow.open( link, '_blank', 'noopener' );\n\t\t\t} );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the mermaid balloon toolbar button.\n\t *\n\t * @private\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {String} name Name of the button.\n\t * @param {String} label Label for the button.\n\t * @param {String} icon The button icon.\n\t */\n\t_createToolbarButton( editor, name, label, icon ) {\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\t\t\tconst command = editor.commands.get( `${ name }Command` );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( label ),\n\t\t\t\ticon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute the command when the button is clicked.\n\t\t\tcommand.listenTo( buttonView, 'execute', () => {\n\t\t\t\teditor.execute( `${ name }Command` );\n\t\t\t\teditor.editing.view.scrollToTheSelection();\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n}\n","/**\n * @module mermaid/mermaid\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\n\nimport MermaidEditing from './mermaidediting.js';\nimport MermaidToolbar from './mermaidtoolbar.js';\nimport MermaidUI from './mermaidui.js';\n\nimport '../theme/mermaid.css';\n\nexport default class Mermaid extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ MermaidEditing, MermaidToolbar, MermaidUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Mermaid';\n\t}\n}\n","/**\n * @module mermaid\n */\n\nimport infoIcon from './../theme/icons/info.svg';\nimport insertMermaidIcon from './../theme/icons/insert.svg';\nimport previewModeIcon from './../theme/icons/preview-mode.svg';\nimport splitModeIcon from './../theme/icons/split-mode.svg';\nimport sourceModeIcon from './../theme/icons/source-mode.svg';\n\nexport { default as Mermaid } from './mermaid.js';\n\nexport const icons = {\n\tinfoIcon,\n\tinsertMermaidIcon,\n\tpreviewModeIcon,\n\tsplitModeIcon,\n\tsourceModeIcon\n};\n"],"names":["checkIsOn","editor","commandName","selection","model","document","mermaidItem","getSelectedElement","getLastPosition","parent","is","getAttribute","MermaidPreviewCommand","Command","refresh","documentSelection","selectedElement","isSelectedElementMermaid","name","findAncestor","isEnabled","value","execute","change","writer","setAttribute","MermaidSourceViewCommand","MermaidSplitViewCommand","MOCK_MERMAID_MARKUP","InsertMermaidCommand","createElement","displayMode","source","insertContent","DEBOUNCE_TIME","MermaidEditing","Plugin","pluginName","init","_registerCommands","_defineConverters","afterInit","schema","register","allowAttributes","allowWhere","isObject","commands","add","data","downcastDispatcher","on","_mermaidDataDowncast","bind","editing","_mermaidDowncast","_sourceAttributeDowncast","upcastDispatcher","_mermaidUpcast","priority","conversion","for","attributeToAttribute","key","view","modelAttributeValue","evt","conversionApi","mapper","consumable","consume","item","targetViewPosition","toViewPosition","createPositionBefore","code","createContainerElement","class","pre","spellcheck","sourceTextNode","createText","insert","createPositionAt","bindElements","t","that","wrapperAttributes","textareaAttributes","placeholder","wrapper","editingContainer","createUIElement","createEditingTextarea","previewContainer","createMermaidPreview","toWidget","widgetLabel","hasSelectionHandle","domDocument","domElement","toDomElement","debouncedListener","debounce","event","target","addEventListener","setSelection","mermaidSource","innerHTML","window","setTimeout","_renderMermaid","newSource","attributeNewValue","domConverter","mermaidView","toViewElement","child","getChildren","hasClass","domEditingTextarea","viewToDom","domPreviewWrapper","removeAttribute","viewCodeElement","viewItem","hasPreElementParent","hasCodeAncestors","modelCursor","test","Array","from","filter","map","join","mermaidElement","safeInsert","updateConversionResult","mermaid","undefined","MermaidToolbar","requires","WidgetToolbarRepository","widgetToolbarRepository","plugins","get","mermaidToolbarItems","ariaLabel","items","getRelatedElement","viewElement","MermaidUI","_addButtons","_addInsertMermaidButton","_addMermaidInfoButton","_createToolbarButton","previewModeIcon","sourceModeIcon","splitModeIcon","ui","componentFactory","locale","buttonView","ButtonView","command","set","label","icon","insertMermaidIcon","tooltip","to","listenTo","mermaidItemViewElement","scrollToTheSelection","focus","mermaidItemDomElement","querySelector","link","infoIcon","open","Mermaid","icons"],"mappings":"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"}